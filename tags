!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
$(LIBFT)	Makefile	/^$(LIBFT):	${SRCS} ${OBJS} libft.h$/;"	t
$(MLX)	Makefile	/^$(MLX):$/;"	t
$(NAME)	Makefile	/^$(NAME): $(OBJ_DIRS) $(SRC) $(MLX) $(OBJ) $(LIBFT)$/;"	t
$(NAME)	libft/Makefile	/^$(NAME): ${OBJS} ${HEADER}$/;"	t
$(NAME)	minilibx-linux/Makefile.mk	/^$(NAME)	: $(OBJ)$/;"	t
$(NAME)	minilibx-linux/test/Makefile.mk	/^$(NAME): $(OBJ)$/;"	t
$(OBJ)	Makefile	/^$(OBJ) : | $(OBJ_DIRS)$/;"	t
$(OBJS)	libft/Makefile	/^$(OBJS) :	libft.h$/;"	t
$(OBJ_DIR)/%.o	minilibx-linux/Makefile.mk	/^$(OBJ_DIR)\/%.o: %.c$/;"	t
$(OBJ_DIRS)	Makefile	/^$(OBJ_DIRS):$/;"	t
$(OBJ_DIRS)/%.o	Makefile	/^$(OBJ_DIRS)\/%.o: $(SRC_DIR)\/%.c$/;"	t
.c.o	Makefile	/^.c.o:$/;"	t
.c.o	libft/Makefile	/^.c.o:$/;"	t
AUTHOR	minilibx-linux/man/man1/mlx.1	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	minilibx-linux/man/man1/mlx_loop.1	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	minilibx-linux/man/man1/mlx_new_image.1	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	minilibx-linux/man/man1/mlx_new_window.1	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	minilibx-linux/man/man1/mlx_pixel_put.1	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	minilibx-linux/man/man3/mlx.3	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	minilibx-linux/man/man3/mlx_loop.3	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	minilibx-linux/man/man3/mlx_new_image.3	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	minilibx-linux/man/man3/mlx_new_window.3	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	minilibx-linux/man/man3/mlx_pixel_put.3	/^.SH AUTHOR$/;"	s	title:MiniLibX
CC	Makefile	/^CC = cc $(CFLAGS)$/;"	m
CC	libft/Makefile	/^CC = cc $(CFLAGS)$/;"	m
CC	minilibx-linux/Makefile.mk	/^	CC = clang$/;"	m
CC	minilibx-linux/Makefile.mk	/^CC	= gcc$/;"	m
CC	minilibx-linux/test/Makefile.mk	/^	CC	= gcc$/;"	m
CC	minilibx-linux/test/Makefile.mk	/^	CC = clang$/;"	m
CFLAGS	Makefile	/^CFLAGS = -Wall -Wextra -Werror -g #-fsanitize=address$/;"	m
CFLAGS	libft/Makefile	/^CFLAGS = -Wall -Wextra -Werror -g$/;"	m
CFLAGS	minilibx-linux/Makefile.mk	/^CFLAGS	= -O3 -I$(INC)$/;"	m
CFLAGS	minilibx-linux/test/Makefile.mk	/^CFLAGS= -I$(INC) -O3 -I.. -g$/;"	m
COLOR	minilibx-linux/man/man1/mlx_pixel_put.1	/^.SH COLOR MANAGEMENT$/;"	s	title:MiniLibX
COLOR	minilibx-linux/man/man3/mlx_pixel_put.3	/^.SH COLOR MANAGEMENT$/;"	s	title:MiniLibX
CUB3D_H	inc/cub3d.h	/^# define CUB3D_H$/;"	d
DESCRIPTION	minilibx-linux/man/man1/mlx.1	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	minilibx-linux/man/man1/mlx_loop.1	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	minilibx-linux/man/man1/mlx_new_image.1	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	minilibx-linux/man/man1/mlx_new_window.1	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	minilibx-linux/man/man1/mlx_pixel_put.1	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	minilibx-linux/man/man3/mlx.3	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	minilibx-linux/man/man3/mlx_loop.3	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	minilibx-linux/man/man3/mlx_new_image.3	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	minilibx-linux/man/man3/mlx_new_window.3	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	minilibx-linux/man/man3/mlx_pixel_put.3	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DIR	libft/Makefile	/^DIR = $(shell pwd | xargs basename)$/;"	m
ENV_DISPLAY	minilibx-linux/mlx_int.h	/^# define ENV_DISPLAY /;"	d
EOF	minilibx-linux/configure	/^cat <<EOF$/;"	h
ERR_NO_TRUECOLOR	minilibx-linux/mlx_int.h	/^# define ERR_NO_TRUECOLOR /;"	d
GOING	minilibx-linux/man/man1/mlx_loop.1	/^.SH GOING FURTHER WITH EVENTS$/;"	s	title:MiniLibX
GOING	minilibx-linux/man/man3/mlx_loop.3	/^.SH GOING FURTHER WITH EVENTS$/;"	s	title:MiniLibX
HEADER	libft/Makefile	/^HEADER = libft.h$/;"	m
HEIGHT	inc/cub3d.h	/^# define HEIGHT /;"	d
IM1_SX	minilibx-linux/test/main.c	/^#define	IM1_SX	/;"	d	file:
IM1_SY	minilibx-linux/test/main.c	/^#define	IM1_SY	/;"	d	file:
IM3_SX	minilibx-linux/test/main.c	/^#define	IM3_SX	/;"	d	file:
IM3_SY	minilibx-linux/test/main.c	/^#define	IM3_SY	/;"	d	file:
INC	minilibx-linux/Makefile.mk	/^INC	=%%%%$/;"	m
INC	minilibx-linux/test/Makefile.mk	/^INC=%%%%$/;"	m
INCLIB	minilibx-linux/test/Makefile.mk	/^INCLIB=$(INC)\/..\/lib$/;"	m
INCLUDE	minilibx-linux/man/man1/mlx.1	/^.SH INCLUDE FILE$/;"	s	title:MiniLibX
INCLUDE	minilibx-linux/man/man3/mlx.3	/^.SH INCLUDE FILE$/;"	s	title:MiniLibX
INCPATH	Makefile	/^INCPATH = -I $(INC_DIR) -I $(LIB_DIR)$/;"	m
INC_DIR	Makefile	/^INC_DIR =		inc$/;"	m
LFLAGS	minilibx-linux/test/Makefile.mk	/^LFLAGS = -L.. -lmlx -L$(INCLIB) -lXext -lX11 -lm$/;"	m
LIBFT	Makefile	/^LIBFT = libft\/libft.a$/;"	m
LIBFT_H	libft/libft.h	/^# define LIBFT_H$/;"	d
LIBPATH	Makefile	/^LIBPATH = -L $(LIB_DIR)$/;"	m
LIBRARY	minilibx-linux/man/man1/mlx.1	/^.SH LIBRARY FUNCTIONS$/;"	s	title:MiniLibX
LIBRARY	minilibx-linux/man/man3/mlx.3	/^.SH LIBRARY FUNCTIONS$/;"	s	title:MiniLibX
LIB_DIR	Makefile	/^LIB_DIR =		libft\/$/;"	m
LINKING	minilibx-linux/man/man1/mlx.1	/^.SH LINKING MiniLibX$/;"	s	title:MiniLibX
LINKING	minilibx-linux/man/man3/mlx.3	/^.SH LINKING MiniLibX$/;"	s	title:MiniLibX
LOCALHOST	minilibx-linux/mlx_int.h	/^# define LOCALHOST /;"	d
MLX	Makefile	/^MLX = minilibx-linux\/libmlx_Linux.a$/;"	m
MLX_H	minilibx-linux/mlx.h	/^#define	MLX_H$/;"	d
MLX_INT_H	minilibx-linux/mlx_int.h	/^# define MLX_INT_H$/;"	d
MLX_MAX_EVENT	minilibx-linux/mlx_int.h	/^# define MLX_MAX_EVENT /;"	d
MLX_TYPE_SHM	minilibx-linux/mlx_int.h	/^# define MLX_TYPE_SHM /;"	d
MLX_TYPE_SHM_PIXMAP	minilibx-linux/mlx_int.h	/^# define MLX_TYPE_SHM_PIXMAP /;"	d
MLX_TYPE_XIMAGE	minilibx-linux/mlx_int.h	/^# define MLX_TYPE_XIMAGE /;"	d
MiniLibX	minilibx-linux/man/man1/mlx.1	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	minilibx-linux/man/man1/mlx_loop.1	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	minilibx-linux/man/man1/mlx_new_image.1	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	minilibx-linux/man/man1/mlx_new_window.1	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	minilibx-linux/man/man1/mlx_pixel_put.1	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	minilibx-linux/man/man3/mlx.3	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	minilibx-linux/man/man3/mlx_loop.3	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	minilibx-linux/man/man3/mlx_new_image.3	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	minilibx-linux/man/man3/mlx_new_window.3	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	minilibx-linux/man/man3/mlx_pixel_put.3	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
NAME	Makefile	/^NAME = cub3D$/;"	m
NAME	libft/Makefile	/^NAME = libft.a$/;"	m
NAME	minilibx-linux/Makefile.mk	/^NAME		= libmlx.a$/;"	m
NAME	minilibx-linux/man/man1/mlx.1	/^.SH NAME$/;"	s	title:MiniLibX
NAME	minilibx-linux/man/man1/mlx_loop.1	/^.SH NAME$/;"	s	title:MiniLibX
NAME	minilibx-linux/man/man1/mlx_new_image.1	/^.SH NAME$/;"	s	title:MiniLibX
NAME	minilibx-linux/man/man1/mlx_new_window.1	/^.SH NAME$/;"	s	title:MiniLibX
NAME	minilibx-linux/man/man1/mlx_pixel_put.1	/^.SH NAME$/;"	s	title:MiniLibX
NAME	minilibx-linux/man/man3/mlx.3	/^.SH NAME$/;"	s	title:MiniLibX
NAME	minilibx-linux/man/man3/mlx_loop.3	/^.SH NAME$/;"	s	title:MiniLibX
NAME	minilibx-linux/man/man3/mlx_new_image.3	/^.SH NAME$/;"	s	title:MiniLibX
NAME	minilibx-linux/man/man3/mlx_new_window.3	/^.SH NAME$/;"	s	title:MiniLibX
NAME	minilibx-linux/man/man3/mlx_pixel_put.3	/^.SH NAME$/;"	s	title:MiniLibX
NAME	minilibx-linux/test/Makefile.mk	/^NAME= mlx-test$/;"	m
NAME_UNAME	minilibx-linux/Makefile.mk	/^NAME_UNAME	= libmlx_$(UNAME).a$/;"	m
OBJ	Makefile	/^OBJ =			$(SRC:$(SRC_DIR)%.c=$(OBJ_DIR)%.o)$/;"	m
OBJ	minilibx-linux/Makefile.mk	/^OBJ	= $(addprefix $(OBJ_DIR)\/,$(SRC:%.c=%.o))$/;"	m
OBJ	minilibx-linux/test/Makefile.mk	/^OBJ = $(SRC:%.c=%.o)$/;"	m
OBJS	libft/Makefile	/^OBJS = ${SRCS:.c=.o}$/;"	m
OBJ_DIR	Makefile	/^OBJ_DIR =		obj$/;"	m
OBJ_DIR	minilibx-linux/Makefile.mk	/^OBJ_DIR = obj$/;"	m
OBJ_DIRS	Makefile	/^OBJ_DIRS =		$(OBJ_DIR)$/;"	m
RETURN	minilibx-linux/man/man1/mlx.1	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	minilibx-linux/man/man1/mlx_new_image.1	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	minilibx-linux/man/man1/mlx_new_window.1	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	minilibx-linux/man/man3/mlx.3	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	minilibx-linux/man/man3/mlx_new_image.3	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	minilibx-linux/man/man3/mlx_new_window.3	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	minilibx-linux/mlx_xpm.c	/^#define	RETURN	/;"	d	file:
RM	Makefile	/^RM = rm -fr$/;"	m
RM	libft/Makefile	/^RM = rm -fr$/;"	m
SEE	minilibx-linux/man/man1/mlx.1	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	minilibx-linux/man/man1/mlx_loop.1	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	minilibx-linux/man/man1/mlx_new_image.1	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	minilibx-linux/man/man1/mlx_new_window.1	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	minilibx-linux/man/man1/mlx_pixel_put.1	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	minilibx-linux/man/man3/mlx.3	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	minilibx-linux/man/man3/mlx_loop.3	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	minilibx-linux/man/man3/mlx_new_image.3	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	minilibx-linux/man/man3/mlx_new_window.3	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	minilibx-linux/man/man3/mlx_pixel_put.3	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SRC	Makefile	/^SRC =			$(SRC_FT:%=$(SRC_DIR)\/%.c)$/;"	m
SRC	minilibx-linux/Makefile.mk	/^SRC	= mlx_init.c mlx_new_window.c mlx_pixel_put.c mlx_loop.c \\$/;"	m
SRC	minilibx-linux/test/Makefile.mk	/^SRC = main.c$/;"	m
SRCS	libft/Makefile	/^SRCS = ft_atoi.c ft_bzero.c ft_calloc.c ft_isalnum.c ft_isalpha.c ft_isascii.c \\$/;"	m
SRC_DIR	Makefile	/^SRC_DIR =		src$/;"	m
SRC_FT	Makefile	/^SRC_FT = affiche \\$/;"	m
STORING	minilibx-linux/man/man1/mlx_new_image.1	/^.SH STORING COLOR INSIDE IMAGES$/;"	s	title:MiniLibX
STORING	minilibx-linux/man/man3/mlx_new_image.3	/^.SH STORING COLOR INSIDE IMAGES$/;"	s	title:MiniLibX
SYNOPSYS	minilibx-linux/man/man1/mlx.1	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	minilibx-linux/man/man1/mlx_loop.1	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	minilibx-linux/man/man1/mlx_new_image.1	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	minilibx-linux/man/man1/mlx_new_window.1	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	minilibx-linux/man/man1/mlx_pixel_put.1	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	minilibx-linux/man/man3/mlx.3	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	minilibx-linux/man/man3/mlx_loop.3	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	minilibx-linux/man/man3/mlx_new_image.3	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	minilibx-linux/man/man3/mlx_new_window.3	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	minilibx-linux/man/man3/mlx_pixel_put.3	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
UNAME	minilibx-linux/Makefile.mk	/^UNAME = $(shell uname)$/;"	m
UNAME	minilibx-linux/test/Makefile.mk	/^UNAME := $(shell uname)$/;"	m
WARN_SHM_ATTACH	minilibx-linux/mlx_int.h	/^# define WARN_SHM_ATTACH /;"	d
WIDTH	inc/cub3d.h	/^# define WIDTH /;"	d
WIN1_SX	minilibx-linux/test/main.c	/^#define	WIN1_SX	/;"	d	file:
WIN1_SY	minilibx-linux/test/main.c	/^#define	WIN1_SY	/;"	d	file:
X-WINDOW	minilibx-linux/man/man1/mlx.1	/^.SH X-WINDOW CONCEPT$/;"	s	title:MiniLibX
X-WINDOW	minilibx-linux/man/man1/mlx_loop.1	/^.SH X-WINDOW EVENTS$/;"	s	title:MiniLibX
X-WINDOW	minilibx-linux/man/man3/mlx.3	/^.SH X-WINDOW CONCEPT$/;"	s	title:MiniLibX
X-WINDOW	minilibx-linux/man/man3/mlx_loop.3	/^.SH X-WINDOW EVENTS$/;"	s	title:MiniLibX
XPM	minilibx-linux/man/man1/mlx_new_image.1	/^.SH XPM IMAGES$/;"	s	title:MiniLibX
XPM	minilibx-linux/man/man3/mlx_new_image.3	/^.SH XPM IMAGES$/;"	s	title:MiniLibX
X_ShmAttach	minilibx-linux/mlx_new_image.c	/^#define	X_ShmAttach	/;"	d	file:
addr	inc/cub3d.h	/^	char	*addr;$/;"	m	struct:s_data	typeref:typename:char *
all	Makefile	/^all: $(NAME)$/;"	t
all	libft/Makefile	/^all: ${NAME}$/;"	t
all	minilibx-linux/Makefile	/^all	: do_configure$/;"	t
all	minilibx-linux/Makefile.mk	/^all	: $(NAME)$/;"	t
all	minilibx-linux/test/Makefile.mk	/^all: $(NAME)$/;"	t
angle	inc/cub3d.h	/^	double	angle;$/;"	m	struct:s_player	typeref:typename:double
at_exit	minilibx-linux/test/run_tests.sh	/^at_exit() {$/;"	f
backward	inc/cub3d.h	/^	int	backward;$/;"	m	struct:s_hooking	typeref:typename:int
backward2	inc/cub3d.h	/^	int	backward2;$/;"	m	struct:s_hooking	typeref:typename:int
begin	libft/libft.h	/^	t_begin	*begin;$/;"	m	struct:s_global	typeref:typename:t_begin *
bits_per_pixel	inc/cub3d.h	/^	int		bits_per_pixel;$/;"	m	struct:s_data	typeref:typename:int
bmoves	libft/libft.h	/^	int				bmoves;$/;"	m	struct:s_begin	typeref:typename:int
bpp	minilibx-linux/mlx_int.h	/^	int				bpp;$/;"	m	struct:s_img	typeref:typename:int
bpp1	minilibx-linux/test/main.c	/^int	bpp1;$/;"	v	typeref:typename:int
bpp2	minilibx-linux/test/main.c	/^int	bpp2;$/;"	v	typeref:typename:int
bpp3	minilibx-linux/test/main.c	/^int	bpp3;$/;"	v	typeref:typename:int
bpp4	minilibx-linux/test/main.c	/^int	bpp4;$/;"	v	typeref:typename:int
brice_casting	src/brice_casting.c	/^void	brice_casting(t_info *info)$/;"	f	typeref:typename:void
btmp	libft/libft.h	/^	t_begin	*btmp;$/;"	m	struct:s_global	typeref:typename:t_begin *
cam_left	inc/cub3d.h	/^	int	cam_left;$/;"	m	struct:s_hooking	typeref:typename:int
cam_right	inc/cub3d.h	/^	int	cam_right;$/;"	m	struct:s_hooking	typeref:typename:int
cast_angle	src/brice_casting.c	/^void	cast_angle(t_info *info, t_casting *cast)$/;"	f	typeref:typename:void
cast_droit	src/brice_casting.c	/^void	cast_droit(t_info *info, t_casting *cast)$/;"	f	typeref:typename:void
casting2	src/brice_casting.c	/^void	casting2(t_info *info, t_casting *cast, int i)$/;"	f	typeref:typename:void
check	minilibx-linux/Makefile.mk	/^check: all$/;"	t
choose_texture	src/casting_tools.c	/^void	choose_texture(t_info *info, t_casting *cast)$/;"	f	typeref:typename:void
chunk	libft/libft.h	/^	t_chunk	*chunk;$/;"	m	struct:s_global	typeref:typename:t_chunk *
clean	Makefile	/^clean:$/;"	t
clean	libft/Makefile	/^clean:$/;"	t
clean	minilibx-linux/Makefile	/^clean	:$/;"	t
clean	minilibx-linux/Makefile.mk	/^clean	:$/;"	t
clean	minilibx-linux/configure	/^clean(){$/;"	f
clean	minilibx-linux/test/Makefile.mk	/^clean:$/;"	t
closewin	src/cub3d_basic2.c	/^int	closewin(t_info *info)$/;"	f	typeref:typename:int
cmap	minilibx-linux/mlx_int.h	/^	Colormap	cmap;$/;"	m	struct:s_xvar	typeref:typename:Colormap
coffee	Makefile	/^coffee: all clean$/;"	t
col	minilibx-linux/mlx_int.h	/^	int		col;$/;"	m	struct:s_xpm_col	typeref:typename:int
color	minilibx-linux/mlx_int.h	/^	int		color;$/;"	m	struct:s_col_name	typeref:typename:int
color_floor	inc/cub3d.h	/^	int			color_floor;$/;"	m	struct:s_info	typeref:typename:int
color_map_1	minilibx-linux/test/main.c	/^int	color_map_1(void *win,int w,int h)$/;"	f	typeref:typename:int
color_map_2	minilibx-linux/test/main.c	/^int	color_map_2(unsigned char *data,int bpp,int sl,int w,int h,int endian, int type)$/;"	f	typeref:typename:int
color_sky	inc/cub3d.h	/^	int			color_sky;$/;"	m	struct:s_info	typeref:typename:int
content	libft/libft.h	/^	void			*content;$/;"	m	struct:s_list	typeref:typename:void *
create_trgb	src/ft_colors.c	/^int	create_trgb(int t, int r, int g, int b)$/;"	f	typeref:typename:int
curr	inc/cub3d.h	/^	double		curr[2];$/;"	m	struct:s_casting	typeref:typename:double[2]
current	inc/cub3d.h	/^	double		current;$/;"	m	struct:s_casting	typeref:typename:double
data	minilibx-linux/mlx_int.h	/^	char			*data;$/;"	m	struct:s_img	typeref:typename:char *
data1	minilibx-linux/test/main.c	/^char	*data1;$/;"	v	typeref:typename:char *
data2	minilibx-linux/test/main.c	/^char	*data2;$/;"	v	typeref:typename:char *
data3	minilibx-linux/test/main.c	/^char	*data3;$/;"	v	typeref:typename:char *
data4	minilibx-linux/test/main.c	/^char	*data4;$/;"	v	typeref:typename:char *
decrgb	minilibx-linux/mlx_int.h	/^	int			decrgb[6];$/;"	m	struct:s_xvar	typeref:typename:int[6]
delta	inc/cub3d.h	/^	double		delta[2];$/;"	m	struct:s_casting	typeref:typename:double[2]
depth	minilibx-linux/mlx_int.h	/^	int			depth;$/;"	m	struct:s_xvar	typeref:typename:int
dir_v_x	inc/cub3d.h	/^	double		dir_v_x;$/;"	m	struct:s_casting	typeref:typename:double
dir_v_y	inc/cub3d.h	/^	double		dir_v_y;$/;"	m	struct:s_casting	typeref:typename:double
display	minilibx-linux/mlx_int.h	/^	Display		*display;$/;"	m	struct:s_xvar	typeref:typename:Display *
dist	inc/cub3d.h	/^	char		*dist;$/;"	m	struct:s_casting	typeref:typename:char *
distance0	inc/cub3d.h	/^	double		distance0;$/;"	m	struct:s_casting	typeref:typename:double
distance1	inc/cub3d.h	/^	double		distance1;$/;"	m	struct:s_casting	typeref:typename:double
do_configure	minilibx-linux/Makefile	/^do_configure	:$/;"	t
do_flush	minilibx-linux/mlx_int.h	/^	int			do_flush;$/;"	m	struct:s_xvar	typeref:typename:int
do_it_pls	src/casting_tools.c	/^void	do_it_pls(t_info *info, t_casting *cast, int i)$/;"	f	typeref:typename:void
end_loop	minilibx-linux/mlx_int.h	/^	int 		end_loop;$/;"	m	struct:s_xvar	typeref:typename:int
end_px	inc/cub3d.h	/^	int			end_px;$/;"	m	struct:s_casting	typeref:typename:int
endian	inc/cub3d.h	/^	int		endian;$/;"	m	struct:s_data	typeref:typename:int
endian1	minilibx-linux/test/main.c	/^int	endian1;$/;"	v	typeref:typename:int
endian2	minilibx-linux/test/main.c	/^int	endian2;$/;"	v	typeref:typename:int
endian3	minilibx-linux/test/main.c	/^int	endian3;$/;"	v	typeref:typename:int
endian4	minilibx-linux/test/main.c	/^int	endian4;$/;"	v	typeref:typename:int
expose_hook	minilibx-linux/mlx_int.h	/^	int					(*expose_hook)();$/;"	m	struct:s_win_list	typeref:typename:int (*)()
expose_param	minilibx-linux/mlx_int.h	/^	void				*expose_param;$/;"	m	struct:s_win_list	typeref:typename:void *
expose_win1	minilibx-linux/test/main.c	/^int	expose_win1(void *p)$/;"	f	typeref:typename:int
expose_win2	minilibx-linux/test/main.c	/^int	expose_win2(void *p)$/;"	f	typeref:typename:int
fclean	Makefile	/^fclean: clean$/;"	t
fclean	libft/Makefile	/^fclean: clean$/;"	t
fd	inc/cub3d.h	/^	int			fd;$/;"	m	struct:s_info	typeref:typename:int
format	minilibx-linux/mlx_int.h	/^	int				format;$/;"	m	struct:s_img	typeref:typename:int
forward	inc/cub3d.h	/^	int	forward;$/;"	m	struct:s_hooking	typeref:typename:int
forward2	inc/cub3d.h	/^	int	forward2;$/;"	m	struct:s_hooking	typeref:typename:int
free_char_char	src/liberation.c	/^void	free_char_char(char **str)$/;"	f	typeref:typename:void
free_func	src/liberation.c	/^void	free_func(t_info *info)$/;"	f	typeref:typename:void
free_texture	src/liberation.c	/^void	free_texture(t_info *info, t_texture *texture)$/;"	f	typeref:typename:void
ft_add_text	src/ft_partext.c	/^int	ft_add_text(t_info *info, char *buf)$/;"	f	typeref:typename:int
ft_atoi	libft/ft_atoi.c	/^long	ft_atoi(const char *str)$/;"	f	typeref:typename:long
ft_bspace	libft/ft_calloc.c	/^void	ft_bspace(void *s, size_t n)$/;"	f	typeref:typename:void
ft_bzero	libft/ft_bzero.c	/^void	ft_bzero(void *s, size_t n)$/;"	f	typeref:typename:void
ft_calloc	libft/ft_calloc.c	/^void	*ft_calloc(size_t nmemb, size_t size)$/;"	f	typeref:typename:void *
ft_calmap	libft/ft_calloc.c	/^void	*ft_calmap(size_t nmemb, size_t size)$/;"	f	typeref:typename:void *
ft_charcheck	src/ft_check_map.c	/^int	ft_charcheck(char **map, int y, int x)$/;"	f	typeref:typename:int
ft_check_colors	src/ft_colors.c	/^int	ft_check_colors(char **tab)$/;"	f	typeref:typename:int
ft_check_fill	src/ft_partext.c	/^int	ft_check_fill(char *buf)$/;"	f	typeref:typename:int
ft_check_map	src/ft_parse.c	/^int	ft_check_map(char *buf)$/;"	f	typeref:typename:int
ft_check_zero	src/ft_check_mapz.c	/^int	ft_check_zero(char **map, int y, int x)$/;"	f	typeref:typename:int
ft_check_zerobis	src/ft_check_mapz.c	/^int	ft_check_zerobis(char **map, int y, int x)$/;"	f	typeref:typename:int
ft_checkside	src/ft_check_map.c	/^int	ft_checkside(char c)$/;"	f	typeref:typename:int
ft_choose_function	libft/ft_printf.c	/^int	ft_choose_function(char c, va_list *argv)$/;"	f	typeref:typename:int
ft_closewin	src/main.c	/^int	ft_closewin(t_info *info, int err)$/;"	f	typeref:typename:int
ft_digital	libft/ft_isdigit.c	/^int	ft_digital(char *c)$/;"	f	typeref:typename:int
ft_fill_color	src/ft_colors.c	/^int	ft_fill_color(int *tofill, char *buf)$/;"	f	typeref:typename:int
ft_fill_str	src/ft_gnl.c	/^char	*ft_fill_str(char *str, char *buf)$/;"	f	typeref:typename:char *
ft_fill_text	src/ft_partext.c	/^int	ft_fill_text(t_texture *text, char *buf)$/;"	f	typeref:typename:int
ft_free	src/liberation.c	/^void	ft_free(t_info *info)$/;"	f	typeref:typename:void
ft_free_3_str	libft/ft_strjoin.c	/^void	ft_free_3_str(char *s1, char *s2, char *s3, int i)$/;"	f	typeref:typename:void
ft_free_map	src/liberation.c	/^void	ft_free_map(t_map *map)$/;"	f	typeref:typename:void
ft_free_split	libft/ft_split.c	/^char	**ft_free_split(char **tab)$/;"	f	typeref:typename:char **
ft_free_split2	libft/ft_split_2.c	/^char	**ft_free_split2(char **tab)$/;"	f	typeref:typename:char **
ft_getmap	src/map.c	/^int	ft_getmap(t_info *info)$/;"	f	typeref:typename:int
ft_hexa_co	libft/ft_printf_tools.c	/^int	ft_hexa_co(unsigned long long nb, char c, unsigned long long count)$/;"	f	typeref:typename:int
ft_hexa_count	libft/ft_printf_tools.c	/^int	ft_hexa_count(unsigned int nb, char c, unsigned long long count)$/;"	f	typeref:typename:int
ft_init_player_angle	src/ft_player.c	/^void	ft_init_player_angle(t_info *info, int y, int x)$/;"	f	typeref:typename:void
ft_init_window	src/main.c	/^int	ft_init_window(t_info *info)$/;"	f	typeref:typename:int
ft_isalnum	libft/ft_isalnum.c	/^int	ft_isalnum(int c)$/;"	f	typeref:typename:int
ft_isalpha	libft/ft_isalpha.c	/^int	ft_isalpha(int c)$/;"	f	typeref:typename:int
ft_isascii	libft/ft_isascii.c	/^int	ft_isascii(int c)$/;"	f	typeref:typename:int
ft_isdigit	libft/ft_isdigit.c	/^int	ft_isdigit(int c)$/;"	f	typeref:typename:int
ft_isprint	libft/ft_isprint.c	/^int	ft_isprint(int c)$/;"	f	typeref:typename:int
ft_itoa	libft/ft_itoa.c	/^char	*ft_itoa(int nb)$/;"	f	typeref:typename:char *
ft_longest	src/map.c	/^size_t	ft_longest(t_map *map)$/;"	f	typeref:typename:size_t
ft_lstadd_back	libft/ft_lstadd_back.c	/^void	ft_lstadd_back(t_list **alst, t_list *new)$/;"	f	typeref:typename:void
ft_lstadd_front	libft/ft_lstadd_front.c	/^void	ft_lstadd_front(t_pile **alst, t_pile *new)$/;"	f	typeref:typename:void
ft_lstclear	libft/ft_lstclear.c	/^void	ft_lstclear(t_list **lst, void (*del)(void *))$/;"	f	typeref:typename:void
ft_lstdelone	libft/ft_lstdelone.c	/^void	ft_lstdelone(t_list *lst, void (*del)(void *))$/;"	f	typeref:typename:void
ft_lstiter	libft/ft_lstiter.c	/^void	ft_lstiter(t_list *lst, void (*f)(void *))$/;"	f	typeref:typename:void
ft_lstlast	libft/ft_lstlast.c	/^t_pile	*ft_lstlast(t_pile *lst)$/;"	f	typeref:typename:t_pile *
ft_lstmap	libft/ft_lstmap.c	/^t_list	*ft_lstmap(t_list *lst, void *(*f)(void *), void (*del)(void *))$/;"	f	typeref:typename:t_list *
ft_lstnew	libft/ft_lstnew.c	/^t_pile	*ft_lstnew(int num)$/;"	f	typeref:typename:t_pile *
ft_lstsize	libft/ft_lstsize.c	/^int	ft_lstsize(t_pile *lst)$/;"	f	typeref:typename:int
ft_mapadd_back	src/map.c	/^void	ft_mapadd_back(t_map **map, t_map *new)$/;"	f	typeref:typename:void
ft_maplen	src/map.c	/^size_t	ft_maplen(t_map *chain)$/;"	f	typeref:typename:size_t
ft_mapnew	src/map.c	/^int	ft_mapnew(t_map **map, char *buf)$/;"	f	typeref:typename:int
ft_memchr	libft/ft_memchr.c	/^void	*ft_memchr(const void *s, int c, size_t n)$/;"	f	typeref:typename:void *
ft_memcmp	libft/ft_memcmp.c	/^int	ft_memcmp(const void *s1, const void *s2, size_t n)$/;"	f	typeref:typename:int
ft_memcpy	libft/ft_memcpy.c	/^void	*ft_memcpy(void *dst, const void *src, size_t n)$/;"	f	typeref:typename:void *
ft_memmove	libft/ft_memmove.c	/^void	*ft_memmove(void *dst, const void *src, size_t len)$/;"	f	typeref:typename:void *
ft_memset	libft/ft_memset.c	/^void	*ft_memset(void *str, int c, size_t n)$/;"	f	typeref:typename:void *
ft_nb_player	src/ft_player.c	/^int	ft_nb_player(char **map)$/;"	f	typeref:typename:int
ft_parsarg	src/ft_parse.c	/^int	ft_parsarg(t_info *info)$/;"	f	typeref:typename:int
ft_parse	src/ft_parse.c	/^int	ft_parse(t_info *info, char *file)$/;"	f	typeref:typename:int
ft_parsing_info_err	src/ft_parse.c	/^int	ft_parsing_info_err(t_info *info)$/;"	f	typeref:typename:int
ft_parsingage	src/ft_check_map.c	/^int	ft_parsingage(char **map)$/;"	f	typeref:typename:int
ft_perror	src/ft_tools.c	/^int	ft_perror(char *error, char *str)$/;"	f	typeref:typename:int
ft_perror_free	src/ft_tools.c	/^int	ft_perror_free(char *error, char *str, int i)$/;"	f	typeref:typename:int
ft_pileclear	libft/ft_lstclear.c	/^void	ft_pileclear(t_pile *pile)$/;"	f	typeref:typename:void
ft_play	src/ft_parse.c	/^int	ft_play(t_info *info, char *buf)$/;"	f	typeref:typename:int
ft_pos	libft/ft_itoa.c	/^static char	ft_pos(int i, int nb)$/;"	f	typeref:typename:char	file:
ft_poserr	src/ft_tools.c	/^int	ft_poserr(int y, int x, char *str)$/;"	f	typeref:typename:int
ft_print_mapping	src/ft_print.c	/^void	ft_print_mapping(t_map *map)$/;"	f	typeref:typename:void
ft_print_text	src/ft_print.c	/^void	ft_print_text(t_info *info)$/;"	f	typeref:typename:void
ft_printf	libft/ft_printf.c	/^int	ft_printf(const char *str, ...)$/;"	f	typeref:typename:int
ft_putchar_count	libft/ft_printf.c	/^int	ft_putchar_count(char c)$/;"	f	typeref:typename:int
ft_putchar_fd	libft/ft_putchar_fd.c	/^void	ft_putchar_fd(char c, int fd)$/;"	f	typeref:typename:void
ft_putendl_fd	libft/ft_putendl_fd.c	/^void	ft_putendl_fd(char *s, int fd)$/;"	f	typeref:typename:void
ft_putnbr_count	libft/ft_printf_tools.c	/^int	ft_putnbr_count(int n, int i)$/;"	f	typeref:typename:int
ft_putnbr_fd	libft/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/;"	f	typeref:typename:void
ft_putstr_count	libft/ft_printf.c	/^int	ft_putstr_count(char *s)$/;"	f	typeref:typename:int
ft_putstr_error	src/ft_tools.c	/^int	ft_putstr_error(char *error)$/;"	f	typeref:typename:int
ft_putstr_fd	libft/ft_putstr_fd.c	/^int	ft_putstr_fd(char *s, int fd)$/;"	f	typeref:typename:int
ft_putstr_fd_3	libft/ft_putstr_fd.c	/^int	ft_putstr_fd_3(char *s, char *s1, char *s2, int fd)$/;"	f	typeref:typename:int
ft_putstr_frror	src/ft_tools.c	/^int	ft_putstr_frror(char *error, char *str, int i)$/;"	f	typeref:typename:int
ft_putunbr_count	libft/ft_printf_tools.c	/^int	ft_putunbr_count(unsigned int nb)$/;"	f	typeref:typename:int
ft_sides	src/ft_check_map.c	/^int	ft_sides(char **map)$/;"	f	typeref:typename:int
ft_size_int	libft/ft_itoa.c	/^static int	ft_size_int(int nb)$/;"	f	typeref:typename:int	file:
ft_size_int	libft/ft_printf_tools.c	/^static int	ft_size_int(unsigned long long nb, unsigned int base_len)$/;"	f	typeref:typename:int	file:
ft_split	libft/ft_split.c	/^char	**ft_split(const char *s, char c)$/;"	f	typeref:typename:char **
ft_split2	libft/ft_split_2.c	/^char	**ft_split2(const char *s, char c, size_t size)$/;"	f	typeref:typename:char **
ft_strchr	libft/ft_strchr.c	/^char	*ft_strchr(const char *s, int c)$/;"	f	typeref:typename:char *
ft_strdup	libft/ft_strdup.c	/^char	*ft_strdup(const char *src)$/;"	f	typeref:typename:char *
ft_strdup_free	libft/ft_strdup.c	/^char	*ft_strdup_free(char *src)$/;"	f	typeref:typename:char *
ft_strdup_set	libft/ft_split.c	/^static char	*ft_strdup_set(const char *s, char c)$/;"	f	typeref:typename:char *	file:
ft_strdup_set2	libft/ft_split_2.c	/^static char	*ft_strdup_set2(const char *s, char c)$/;"	f	typeref:typename:char *	file:
ft_striteri	libft/ft_striteri.c	/^void	ft_striteri(char *s, void (*f)(unsigned int, char *))$/;"	f	typeref:typename:void
ft_strjoiiin	libft/ft_strjoin.c	/^char	*ft_strjoiiin(char const *s1, char const *s2, char const *s3)$/;"	f	typeref:typename:char *
ft_strjoiiin_free	libft/ft_strjoin.c	/^char	*ft_strjoiiin_free(char *s1, char *s2, char *s3, int i)$/;"	f	typeref:typename:char *
ft_strjoin	libft/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/;"	f	typeref:typename:char *
ft_strjoin_free	libft/ft_strjoin.c	/^char	*ft_strjoin_free(char *s1, char *s2, int i)$/;"	f	typeref:typename:char *
ft_strlcat	libft/ft_strlcat.c	/^size_t	ft_strlcat(char *dest, const char *src, size_t size)$/;"	f	typeref:typename:size_t
ft_strlcpy	libft/ft_strlcpy.c	/^size_t	ft_strlcpy(char *dst, const char *src, size_t size)$/;"	f	typeref:typename:size_t
ft_strlen	libft/ft_strlen.c	/^size_t	ft_strlen(const char *str)$/;"	f	typeref:typename:size_t
ft_strmapi	libft/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned int, char))$/;"	f	typeref:typename:char *
ft_strncmp	libft/ft_strncmp.c	/^int	ft_strncmp(const char *s1, const char *s2, size_t n)$/;"	f	typeref:typename:int
ft_strnstr	libft/ft_strnstr.c	/^char	*ft_strnstr(const char *big, const char *little, size_t len)$/;"	f	typeref:typename:char *
ft_strrchr	libft/ft_strrchr.c	/^char	*ft_strrchr(const char *s, int c)$/;"	f	typeref:typename:char *
ft_strtrim	libft/ft_strtrim.c	/^char	*ft_strtrim(char const *s1, char const *set)$/;"	f	typeref:typename:char *
ft_substr	libft/ft_substr.c	/^char	*ft_substr(char const *s, unsigned int start, size_t len)$/;"	f	typeref:typename:char *
ft_substr_free	libft/ft_substr.c	/^char	*ft_substr_free(char *s, unsigned int start, size_t len)$/;"	f	typeref:typename:char *
ft_substr_map	libft/ft_substr.c	/^char	*ft_substr_map(char const *s, unsigned int start, size_t len)$/;"	f	typeref:typename:char *
ft_tablen	libft/ft_strlen.c	/^size_t	ft_tablen(char **tab)$/;"	f	typeref:typename:size_t
ft_test_line	src/ft_gnl.c	/^unsigned int	ft_test_line(char *str)$/;"	f	typeref:typename:unsigned int
ft_tolower	libft/ft_tolower.c	/^int	ft_tolower(int c)$/;"	f	typeref:typename:int
ft_toupper	libft/ft_toupper.c	/^int	ft_toupper(int c)$/;"	f	typeref:typename:int
ft_trim_end	libft/ft_strtrim.c	/^static size_t	ft_trim_end(char const *s1, char const *set, unsigned int i)$/;"	f	typeref:typename:size_t	file:
ft_trim_start	libft/ft_strtrim.c	/^static size_t	ft_trim_start(char const *s1, char const *set, unsigned int i)$/;"	f	typeref:typename:size_t	file:
ft_valid_elems	src/ft_check_map.c	/^int	ft_valid_elems(char c)$/;"	f	typeref:typename:int
ft_valid_map	src/ft_check_map.c	/^int	ft_valid_map(t_info *info)$/;"	f	typeref:typename:int
ft_word_count	libft/ft_split.c	/^static size_t	ft_word_count(const char *s, char c)$/;"	f	typeref:typename:size_t	file:
ft_word_count2	libft/ft_split_2.c	/^static size_t	ft_word_count2(const char *s, char c, size_t size)$/;"	f	typeref:typename:size_t	file:
ft_wordigit	libft/ft_isalpha.c	/^int	ft_wordigit(char *str)$/;"	f	typeref:typename:int
ft_zero	src/ft_check_mapz.c	/^int	ft_zero(char **map)$/;"	f	typeref:typename:int
gc	minilibx-linux/mlx_int.h	/^	GC					gc;$/;"	m	struct:s_win_list	typeref:typename:GC
gc	minilibx-linux/mlx_int.h	/^	GC				gc;$/;"	m	struct:s_img	typeref:typename:GC
gere_mouse	minilibx-linux/test/new_win.c	/^int gere_mouse(int x,int y,int button,void*toto)$/;"	f	typeref:typename:int
get_address	src/texture.c	/^void	get_address(t_info *info)$/;"	f	typeref:typename:void
get_line	src/ft_gnl.c	/^char	*get_line(char *str, int fd)$/;"	f	typeref:typename:char *
get_next_line	src/ft_gnl.c	/^char	*get_next_line(int fd)$/;"	f	typeref:typename:char *
get_proj_screen	src/casting_tools.c	/^void	get_proj_screen(t_info *info, t_casting *cast)$/;"	f	typeref:typename:void
get_texture	src/texture.c	/^int	get_texture(t_info *info)$/;"	f	typeref:typename:int
get_the_wall	src/casting_tools.c	/^void	get_the_wall(t_info *info, t_casting *cast, int i)$/;"	f	typeref:typename:void
get_xlib_include_path	minilibx-linux/configure	/^get_xlib_include_path(){$/;"	f
h	inc/cub3d.h	/^	int			h;$/;"	m	struct:s_info	typeref:typename:int
height	inc/cub3d.h	/^	int		height;$/;"	m	struct:s_texture	typeref:typename:int
height	minilibx-linux/mlx_int.h	/^	int				height;$/;"	m	struct:s_img	typeref:typename:int
hook	inc/cub3d.h	/^	t_hooking	hook;$/;"	m	struct:s_info	typeref:typename:t_hooking
hook	minilibx-linux/mlx_int.h	/^	int		(*hook)();$/;"	m	struct:s_event_list	typeref:typename:int (*)()
hook	src/hook.c	/^int	hook(int keycode, t_info *info)$/;"	f	typeref:typename:int
hook_release	src/hook.c	/^int	hook_release(int keycode, t_info *info)$/;"	f	typeref:typename:int
hooks	minilibx-linux/mlx_int.h	/^	t_event_list		hooks[MLX_MAX_EVENT];$/;"	m	struct:s_win_list	typeref:typename:t_event_list[]
im1	minilibx-linux/test/main.c	/^void    *im1;$/;"	v	typeref:typename:void *
im2	minilibx-linux/test/main.c	/^void	*im2;$/;"	v	typeref:typename:void *
im3	minilibx-linux/test/main.c	/^void	*im3;$/;"	v	typeref:typename:void *
im4	minilibx-linux/test/main.c	/^void	*im4;$/;"	v	typeref:typename:void *
image	minilibx-linux/mlx_int.h	/^	XImage			*image;$/;"	m	struct:s_img	typeref:typename:XImage *
img	inc/cub3d.h	/^	t_data		img;$/;"	m	struct:s_info	typeref:typename:t_data
img	inc/cub3d.h	/^	t_data	img;$/;"	m	struct:s_texture	typeref:typename:t_data
img	inc/cub3d.h	/^	void	*img;$/;"	m	struct:s_data	typeref:typename:void *
index	libft/libft.h	/^	int				index;$/;"	m	struct:s_chunk	typeref:typename:int
init_hook	src/cub3d_basic.c	/^t_hooking	init_hook(void)$/;"	f	typeref:typename:t_hooking
init_info	src/cub3d_basic.c	/^void	init_info(t_info *info, char *file)$/;"	f	typeref:typename:void
init_texture	src/cub3d_basic.c	/^void	init_texture(t_info *info)$/;"	f	typeref:typename:void
is_wall	inc/cub3d.h	/^	int			is_wall;$/;"	m	struct:s_casting	typeref:typename:int
is_wall	src/moove.c	/^int	is_wall(t_info *info, double y, double x)$/;"	f	typeref:typename:int
key_hook	minilibx-linux/mlx_int.h	/^	int					(*key_hook)();$/;"	m	struct:s_win_list	typeref:typename:int (*)()
key_param	minilibx-linux/mlx_int.h	/^	void				*key_param;$/;"	m	struct:s_win_list	typeref:typename:void *
key_win1	minilibx-linux/test/main.c	/^int	key_win1(int key,void *p)$/;"	f	typeref:typename:int
key_win2	minilibx-linux/test/main.c	/^int	key_win2(int key,void *p)$/;"	f	typeref:typename:int
key_win3	minilibx-linux/test/main.c	/^int	key_win3(int key,void *p)$/;"	f	typeref:typename:int
left	inc/cub3d.h	/^	int	left;$/;"	m	struct:s_hooking	typeref:typename:int
line	inc/cub3d.h	/^	char			*line;$/;"	m	struct:s_map	typeref:typename:char *
line_length	inc/cub3d.h	/^	int		line_length;$/;"	m	struct:s_data	typeref:typename:int
local_endian	minilibx-linux/test/main.c	/^int	local_endian;$/;"	v	typeref:typename:int
log_error	minilibx-linux/configure	/^log_error(){$/;"	f
log_error	minilibx-linux/test/run_tests.sh	/^log_error(){$/;"	f
log_info	minilibx-linux/configure	/^log_info(){$/;"	f
log_info	minilibx-linux/test/run_tests.sh	/^log_info(){$/;"	f
logging	minilibx-linux/configure	/^logging(){$/;"	f
logging	minilibx-linux/test/run_tests.sh	/^logging(){$/;"	f
loop_hook	minilibx-linux/mlx_int.h	/^	int			(*loop_hook)();$/;"	m	struct:s_xvar	typeref:typename:int (*)()
loop_param	minilibx-linux/mlx_int.h	/^	void		*loop_param;$/;"	m	struct:s_xvar	typeref:typename:void *
looping_hook	src/hook.c	/^int	looping_hook(t_info *info)$/;"	f	typeref:typename:int
main	minilibx-linux/configure	/^main(){$/;"	f
main	minilibx-linux/test/main.c	/^int	main()$/;"	f	typeref:typename:int
main	minilibx-linux/test/new_win.c	/^int main()$/;"	f	typeref:typename:int
main	minilibx-linux/test/run_tests.sh	/^main(){$/;"	f
main	src/main.c	/^int	main(int argc, char **argv)$/;"	f	typeref:typename:int
map	inc/cub3d.h	/^	char		**map;$/;"	m	struct:s_info	typeref:typename:char **
mapping	inc/cub3d.h	/^	t_map		*mapping;$/;"	m	struct:s_info	typeref:typename:t_map *
mask	minilibx-linux/mlx_int.h	/^	int		mask;$/;"	m	struct:s_event_list	typeref:typename:int
max	libft/libft.h	/^	int				max;$/;"	m	struct:s_chunk	typeref:typename:int
min	libft/libft.h	/^	int				min;$/;"	m	struct:s_chunk	typeref:typename:int
mlx	inc/cub3d.h	/^	void		*mlx;$/;"	m	struct:s_info	typeref:typename:void *
mlx	minilibx-linux/test/main.c	/^void	*mlx;$/;"	v	typeref:typename:void *
mlx	minilibx-linux/test/new_win.c	/^void *mlx;$/;"	v	typeref:typename:void *
mlx_X_error	minilibx-linux/mlx_new_image.c	/^int	mlx_X_error;$/;"	v	typeref:typename:int
mlx_clear_window	minilibx-linux/mlx_clear_window.c	/^int		mlx_clear_window(t_xvar *xvar,t_win_list *win)$/;"	f	typeref:typename:int
mlx_col_name	minilibx-linux/mlx_rgb.c	/^struct s_col_name mlx_col_name[] =$/;"	v	typeref:struct:s_col_name[]
mlx_destroy_display	minilibx-linux/mlx_destroy_display.c	/^int	mlx_destroy_display(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_destroy_image	minilibx-linux/mlx_destroy_image.c	/^int	mlx_destroy_image(t_xvar *xvar, t_img *img)$/;"	f	typeref:typename:int
mlx_destroy_window	minilibx-linux/mlx_destroy_window.c	/^int	mlx_destroy_window(t_xvar *xvar,t_win_list *win)$/;"	f	typeref:typename:int
mlx_do_key_autorepeatoff	minilibx-linux/mlx_hook.c	/^int	mlx_do_key_autorepeatoff(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_do_key_autorepeaton	minilibx-linux/mlx_hook.c	/^int	mlx_do_key_autorepeaton(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_do_sync	minilibx-linux/mlx_hook.c	/^int	mlx_do_sync(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_expose_hook	minilibx-linux/mlx_expose_hook.c	/^int		mlx_expose_hook(t_win_list *win,int (*funct)(),void *param)$/;"	f	typeref:typename:int
mlx_ext_fullscreen	minilibx-linux/mlx_ext_randr.c	/^int			mlx_ext_fullscreen(t_xvar *xvar, t_win_list *win, int fullscreen)$/;"	f	typeref:typename:int
mlx_flush_event	minilibx-linux/mlx_flush_event.c	/^int	mlx_flush_event(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_get_color_value	minilibx-linux/mlx_get_color_value.c	/^int             mlx_get_color_value(t_xvar *xvar,int color)$/;"	f	typeref:typename:int
mlx_get_data_addr	minilibx-linux/mlx_get_data_addr.c	/^char	*mlx_get_data_addr(t_img *img,int *bits_per_pixel,$/;"	f	typeref:typename:char *
mlx_get_screen_size	minilibx-linux/mlx_screen_size.c	/^int		mlx_get_screen_size(void *mlx_ptr, int *sizex, int *sizey)$/;"	f	typeref:typename:int
mlx_hook	minilibx-linux/mlx_hook.c	/^int	mlx_hook(t_win_list *win, int x_event, int x_mask, $/;"	f	typeref:typename:int
mlx_init	minilibx-linux/mlx_init.c	/^void	*mlx_init()$/;"	f	typeref:typename:void *
mlx_int_anti_resize_win	minilibx-linux/mlx_int_anti_resize_win.c	/^int	mlx_int_anti_resize_win(t_xvar *xvar,Window win,int w,int h)$/;"	f	typeref:typename:int
mlx_int_deal_shm	minilibx-linux/mlx_init.c	/^int		mlx_int_deal_shm(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_int_do_nothing	minilibx-linux/mlx_int_do_nothing.c	/^int	mlx_int_do_nothing(void *param)$/;"	f	typeref:typename:int
mlx_int_egal_img	minilibx-linux/mlx_lib_xpm.c	/^int	mlx_int_egal_img(XImage *img1,XImage *img2)$/;"	f	typeref:typename:int
mlx_int_file_get_rid_comment	minilibx-linux/mlx_xpm.c	/^int	mlx_int_file_get_rid_comment(char *ptr, int size)$/;"	f	typeref:typename:int
mlx_int_get_col_name	minilibx-linux/mlx_xpm.c	/^int	mlx_int_get_col_name(char *str,int size)$/;"	f	typeref:typename:int
mlx_int_get_good_color	minilibx-linux/mlx_get_color_value.c	/^int		mlx_int_get_good_color(t_xvar *xvar,int color)$/;"	f	typeref:typename:int
mlx_int_get_line	minilibx-linux/mlx_xpm.c	/^char	*mlx_int_get_line(char *ptr,int *pos,int size)$/;"	f	typeref:typename:char *
mlx_int_get_text_rgb	minilibx-linux/mlx_xpm.c	/^int	mlx_int_get_text_rgb(char *name, char *end)$/;"	f	typeref:typename:int
mlx_int_get_visual	minilibx-linux/mlx_int_get_visual.c	/^int		mlx_int_get_visual(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_int_new_image	minilibx-linux/mlx_new_image.c	/^void	*mlx_int_new_image(t_xvar *xvar,int width, int height,int format)$/;"	f	typeref:typename:void *
mlx_int_new_xshm_image	minilibx-linux/mlx_new_image.c	/^void	*mlx_int_new_xshm_image(t_xvar *xvar,int width,int height,int format)$/;"	f	typeref:typename:void *
mlx_int_param_ButtonPress	minilibx-linux/mlx_int_param_event.c	/^int	mlx_int_param_ButtonPress(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_ButtonRelease	minilibx-linux/mlx_int_param_event.c	/^int	mlx_int_param_ButtonRelease(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_Expose	minilibx-linux/mlx_int_param_event.c	/^int	mlx_int_param_Expose(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_KeyPress	minilibx-linux/mlx_int_param_event.c	/^int	mlx_int_param_KeyPress(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_KeyRelease	minilibx-linux/mlx_int_param_event.c	/^int	mlx_int_param_KeyRelease(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_MotionNotify	minilibx-linux/mlx_int_param_event.c	/^int	mlx_int_param_MotionNotify(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_event	minilibx-linux/mlx_int_param_event.c	/^int	(*(mlx_int_param_event[]))() =$/;"	v	typeref:typename:int (* ([]))()
mlx_int_param_generic	minilibx-linux/mlx_int_param_event.c	/^int	mlx_int_param_generic(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_undef	minilibx-linux/mlx_int_param_event.c	/^int	mlx_int_param_undef()$/;"	f	typeref:typename:int
mlx_int_parse_xpm	minilibx-linux/mlx_xpm.c	/^void	*mlx_int_parse_xpm(t_xvar *xvar,void *info,int info_size,char *(*f)())$/;"	f	typeref:typename:void *
mlx_int_rgb_conversion	minilibx-linux/mlx_init.c	/^int		mlx_int_rgb_conversion(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_int_set_win_event_mask	minilibx-linux/mlx_int_set_win_event_mask.c	/^int	mlx_int_set_win_event_mask(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_int_static_line	minilibx-linux/mlx_xpm.c	/^char	*mlx_int_static_line(char **xpm_data,int *pos,int size)$/;"	f	typeref:typename:char *
mlx_int_str_str	minilibx-linux/mlx_int_str_to_wordtab.c	/^int	mlx_int_str_str(char *str,char *find,int len)$/;"	f	typeref:typename:int
mlx_int_str_str_cote	minilibx-linux/mlx_int_str_to_wordtab.c	/^int	mlx_int_str_str_cote(char *str,char *find,int len)$/;"	f	typeref:typename:int
mlx_int_str_to_wordtab	minilibx-linux/mlx_int_str_to_wordtab.c	/^char	**mlx_int_str_to_wordtab(char *str)$/;"	f	typeref:typename:char **
mlx_int_wait_first_expose	minilibx-linux/mlx_int_wait_first_expose.c	/^int	mlx_int_wait_first_expose(t_xvar *xvar,Window win)$/;"	f	typeref:typename:int
mlx_int_xpm_f_image	minilibx-linux/mlx_lib_xpm.c	/^void		*mlx_int_xpm_f_image(t_xvar *xvar,int *width,int *height,$/;"	f	typeref:typename:void *
mlx_int_xpm_set_pixel	minilibx-linux/mlx_xpm.c	/^int	mlx_int_xpm_set_pixel(t_img *img, char *data, int opp, int col, int x)$/;"	f	typeref:typename:int
mlx_key_hook	minilibx-linux/mlx_key_hook.c	/^int		mlx_key_hook(t_win_list *win,int (*funct)(),void *param)$/;"	f	typeref:typename:int
mlx_loop	minilibx-linux/mlx_loop.c	/^int			mlx_loop(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_loop_end	minilibx-linux/mlx_loop.c	/^int			mlx_loop_end(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_loop_hook	minilibx-linux/mlx_loop_hook.c	/^int	mlx_loop_hook(t_xvar *xvar,int (*funct)(),void *param)$/;"	f	typeref:typename:int
mlx_mouse_get_pos	minilibx-linux/mlx_mouse.c	/^int		mlx_mouse_get_pos(t_xvar *xvar, t_win_list *win, \\$/;"	f	typeref:typename:int
mlx_mouse_hide	minilibx-linux/mlx_mouse.c	/^int		mlx_mouse_hide(t_xvar *xvar, t_win_list *win)$/;"	f	typeref:typename:int
mlx_mouse_hook	minilibx-linux/mlx_mouse_hook.c	/^int		mlx_mouse_hook(t_win_list *win,int (*funct)(),void *param)$/;"	f	typeref:typename:int
mlx_mouse_move	minilibx-linux/mlx_mouse.c	/^int		mlx_mouse_move(t_xvar *xvar, t_win_list *win, int x, int y)$/;"	f	typeref:typename:int
mlx_mouse_show	minilibx-linux/mlx_mouse.c	/^int		mlx_mouse_show(t_xvar *xvar, t_win_list *win)$/;"	f	typeref:typename:int
mlx_new_image	minilibx-linux/mlx_new_image.c	/^void	*mlx_new_image(t_xvar *xvar,int width, int height)$/;"	f	typeref:typename:void *
mlx_new_image2	minilibx-linux/mlx_new_image.c	/^void	*mlx_new_image2(t_xvar *xvar,int width, int height)$/;"	f	typeref:typename:void *
mlx_new_window	minilibx-linux/mlx_new_window.c	/^void	*mlx_new_window(t_xvar *xvar,int size_x,int size_y,char *title)$/;"	f	typeref:typename:void *
mlx_pixel_put	minilibx-linux/mlx_pixel_put.c	/^int		mlx_pixel_put(t_xvar *xvar,t_win_list *win,$/;"	f	typeref:typename:int
mlx_put_image_to_window	minilibx-linux/mlx_put_image_to_window.c	/^int	mlx_put_image_to_window(t_xvar *xvar,t_win_list *win,t_img *img,$/;"	f	typeref:typename:int
mlx_set_font	minilibx-linux/mlx_set_font.c	/^void	mlx_set_font(t_xvar *xvar, t_win_list *win, char *name)$/;"	f	typeref:typename:void
mlx_string_put	minilibx-linux/mlx_string_put.c	/^int		mlx_string_put(t_xvar *xvar,t_win_list *win,$/;"	f	typeref:typename:int
mlx_xpm_file_to_image	minilibx-linux/mlx_lib_xpm.c	/^void	*mlx_xpm_file_to_image(t_xvar *xvar,char *filename,$/;"	f	typeref:typename:void *
mlx_xpm_file_to_image	minilibx-linux/mlx_xpm.c	/^void	*mlx_xpm_file_to_image(t_xvar *xvar,char *file,int *width,int *height)$/;"	f	typeref:typename:void *
mlx_xpm_to_image	minilibx-linux/mlx_lib_xpm.c	/^void	*mlx_xpm_to_image(t_xvar *xvar,char **data,int *width,int *height)$/;"	f	typeref:typename:void *
mlx_xpm_to_image	minilibx-linux/mlx_xpm.c	/^void	*mlx_xpm_to_image(t_xvar *xvar,char **xpm_data,int *width,int *height)$/;"	f	typeref:typename:void *
mouse_hook	minilibx-linux/mlx_int.h	/^	int					(*mouse_hook)();$/;"	m	struct:s_win_list	typeref:typename:int (*)()
mouse_param	minilibx-linux/mlx_int.h	/^	void				*mouse_param;$/;"	m	struct:s_win_list	typeref:typename:void *
mouse_win1	minilibx-linux/test/main.c	/^int	mouse_win1(int button,int x,int y, void *p)$/;"	f	typeref:typename:int
mouse_win2	minilibx-linux/test/main.c	/^int	mouse_win2(int button,int x,int y, void *p)$/;"	f	typeref:typename:int
mouse_win3	minilibx-linux/test/main.c	/^int	mouse_win3(int x,int y, void *p)$/;"	f	typeref:typename:int
moves	libft/libft.h	/^	int				moves;$/;"	m	struct:s_begin	typeref:typename:int
mv_back	src/moove_back.c	/^void	mv_back(t_info *info)$/;"	f	typeref:typename:void
mv_back_x	src/moove_back.c	/^void	mv_back_x(t_info *info, double oldy)$/;"	f	typeref:typename:void
mv_back_y	src/moove_back.c	/^void	mv_back_y(t_info *info)$/;"	f	typeref:typename:void
mv_for	src/moove_for.c	/^void	mv_for(t_info *info)$/;"	f	typeref:typename:void
mv_forward_x	src/moove_for.c	/^void	mv_forward_x(t_info *info, double oldy)$/;"	f	typeref:typename:void
mv_forward_y	src/moove_for.c	/^void	mv_forward_y(t_info *info)$/;"	f	typeref:typename:void
mv_left	src/moove_left.c	/^void	mv_left(t_info *info)$/;"	f	typeref:typename:void
mv_left_x	src/moove_left.c	/^void	mv_left_x(t_info *info, double oldy)$/;"	f	typeref:typename:void
mv_left_y	src/moove_left.c	/^void	mv_left_y(t_info *info)$/;"	f	typeref:typename:void
mv_right	src/moove_right.c	/^void	mv_right(t_info *info)$/;"	f	typeref:typename:void
mv_right_x	src/moove_right.c	/^void	mv_right_x(t_info *info, double oldy)$/;"	f	typeref:typename:void
mv_right_y	src/moove_right.c	/^void	mv_right_y(t_info *info)$/;"	f	typeref:typename:void
my_mlx_pixel_put	src/cub3d_basic2.c	/^void	my_mlx_pixel_put(t_data *data, int x, int y, int color)$/;"	f	typeref:typename:void
name	minilibx-linux/mlx_int.h	/^	char	*name;$/;"	m	struct:s_col_name	typeref:typename:char *
name	minilibx-linux/mlx_int.h	/^	int		name;$/;"	m	struct:s_xpm_col	typeref:typename:int
nb_col	inc/cub3d.h	/^	int			nb_col;$/;"	m	struct:s_info	typeref:typename:int
nb_line	inc/cub3d.h	/^	int			nb_line;$/;"	m	struct:s_info	typeref:typename:int
new_init_player	src/ft_player.c	/^int	new_init_player(t_info *info)$/;"	f	typeref:typename:int
next	inc/cub3d.h	/^	struct s_map	*next;$/;"	m	struct:s_map	typeref:struct:s_map *
next	libft/libft.h	/^	struct s_chunk	*next;$/;"	m	struct:s_chunk	typeref:struct:s_chunk *
next	libft/libft.h	/^	struct s_list	*next;$/;"	m	struct:s_list	typeref:struct:s_list *
next	libft/libft.h	/^	struct s_pile	*next;$/;"	m	struct:s_pile	typeref:struct:s_pile *
next	libft/libft.h	/^	struct s_roll	*next;$/;"	m	struct:s_roll	typeref:struct:s_roll *
next	minilibx-linux/mlx_int.h	/^	struct s_win_list	*next;$/;"	m	struct:s_win_list	typeref:struct:s_win_list *
next_curr	src/casting_tools.c	/^void	next_curr(t_casting *cast, int side)$/;"	f	typeref:typename:void
num	libft/libft.h	/^	int				num;$/;"	m	struct:s_pile	typeref:typename:int
origin	inc/cub3d.h	/^	char		*origin;$/;"	m	struct:s_casting	typeref:typename:char *
param	minilibx-linux/mlx_int.h	/^	void	*param;$/;"	m	struct:s_event_list	typeref:typename:void *
parse_args	minilibx-linux/configure	/^parse_args(){$/;"	f
path	inc/cub3d.h	/^	char	*path;$/;"	m	struct:s_texture	typeref:typename:char *
percent	inc/cub3d.h	/^	double		percent;$/;"	m	struct:s_casting	typeref:typename:double
percent_y	inc/cub3d.h	/^	int			percent_y;$/;"	m	struct:s_casting	typeref:typename:int
pile	libft/libft.h	/^	t_pile	*pile;$/;"	m	struct:s_global	typeref:typename:t_pile *
pile_a	libft/libft.h	/^	t_pile			*pile_a;$/;"	m	struct:s_begin	typeref:typename:t_pile *
pile_b	libft/libft.h	/^	t_pile			*pile_b;$/;"	m	struct:s_begin	typeref:typename:t_pile *
pix	minilibx-linux/mlx_int.h	/^	Pixmap			pix;$/;"	m	struct:s_img	typeref:typename:Pixmap
player	inc/cub3d.h	/^	t_player	player;$/;"	m	struct:s_info	typeref:typename:t_player
prev_x	inc/cub3d.h	/^	double		prev_x;$/;"	m	struct:s_casting	typeref:typename:double
prev_y	inc/cub3d.h	/^	double		prev_y;$/;"	m	struct:s_casting	typeref:typename:double
print	libft/libft.h	/^	int				print;$/;"	m	struct:s_begin	typeref:typename:int
print_aligned_coffee	Makefile	/^define print_aligned_coffee$/;"	m
print_tab	src/ft_print.c	/^void	print_tab(char **tab)$/;"	f	typeref:typename:void
private_cmap	minilibx-linux/mlx_int.h	/^	int			private_cmap;$/;"	m	struct:s_xvar	typeref:typename:int
proj_dist	inc/cub3d.h	/^	int			proj_dist;$/;"	m	struct:s_casting	typeref:typename:int
proj_screen	inc/cub3d.h	/^	double		proj_screen[4];$/;"	m	struct:s_casting	typeref:typename:double[4]
pshm_format	minilibx-linux/mlx_int.h	/^	int			pshm_format;$/;"	m	struct:s_xvar	typeref:typename:int
put_col	src/affiche.c	/^void	put_col(t_info *info, t_casting *cast, int y)$/;"	f	typeref:typename:void
put_the_wall	src/affiche.c	/^void	put_the_wall(t_info *info, t_casting *cast, int *i)$/;"	f	typeref:typename:void
ra	libft/libft.h	/^	int				ra;$/;"	m	struct:s_roll	typeref:typename:int
ray	inc/cub3d.h	/^	double		ray[2];$/;"	m	struct:s_casting	typeref:typename:double[2]
rb	libft/libft.h	/^	int				rb;$/;"	m	struct:s_roll	typeref:typename:int
re	Makefile	/^re: fclean all$/;"	t
re	libft/Makefile	/^re: fclean all$/;"	t
re	minilibx-linux/Makefile	/^re	: clean all$/;"	t
re	minilibx-linux/test/Makefile.mk	/^re: clean all$/;"	t
right	inc/cub3d.h	/^	int	right;$/;"	m	struct:s_hooking	typeref:typename:int
root	minilibx-linux/mlx_int.h	/^	Window		root;$/;"	m	struct:s_xvar	typeref:typename:Window
rra	libft/libft.h	/^	int				rra;$/;"	m	struct:s_roll	typeref:typename:int
rrb	libft/libft.h	/^	int				rrb;$/;"	m	struct:s_roll	typeref:typename:int
s_begin	libft/libft.h	/^typedef struct s_begin$/;"	s
s_casting	inc/cub3d.h	/^typedef struct s_casting {$/;"	s
s_chunk	libft/libft.h	/^typedef struct s_chunk$/;"	s
s_col_name	minilibx-linux/mlx_int.h	/^struct	s_col_name$/;"	s
s_data	inc/cub3d.h	/^typedef struct s_data {$/;"	s
s_event_list	minilibx-linux/mlx_int.h	/^typedef struct	s_event_list$/;"	s
s_global	libft/libft.h	/^typedef struct s_global$/;"	s
s_hooking	inc/cub3d.h	/^typedef struct s_hooking {$/;"	s
s_img	minilibx-linux/mlx_int.h	/^typedef struct	s_img$/;"	s
s_info	inc/cub3d.h	/^typedef struct s_info {$/;"	s
s_list	libft/libft.h	/^typedef struct s_list$/;"	s
s_map	inc/cub3d.h	/^typedef struct s_map {$/;"	s
s_pile	libft/libft.h	/^typedef struct s_pile$/;"	s
s_player	inc/cub3d.h	/^typedef struct s_player {$/;"	s
s_roll	libft/libft.h	/^typedef struct s_roll$/;"	s
s_texture	inc/cub3d.h	/^typedef struct s_texture {$/;"	s
s_win_list	minilibx-linux/mlx_int.h	/^typedef struct	s_win_list$/;"	s
s_xpm_col	minilibx-linux/mlx_int.h	/^typedef	struct	s_xpm_col$/;"	s
s_xvar	minilibx-linux/mlx_int.h	/^typedef struct	s_xvar$/;"	s
saved_mode	minilibx-linux/mlx_ext_randr.c	/^RRMode	saved_mode = 0;$/;"	v	typeref:typename:RRMode
screen	minilibx-linux/mlx_int.h	/^	int			screen;$/;"	m	struct:s_xvar	typeref:typename:int
shm	minilibx-linux/mlx_int.h	/^	XShmSegmentInfo	shm;$/;"	m	struct:s_img	typeref:typename:XShmSegmentInfo
shm_att_pb	minilibx-linux/mlx_new_image.c	/^int	shm_att_pb(Display *d,XErrorEvent *ev)$/;"	f	typeref:typename:int
show	minilibx-linux/Makefile.mk	/^show:$/;"	t
show	minilibx-linux/test/Makefile.mk	/^show:$/;"	t
show_help	minilibx-linux/configure	/^show_help(){$/;"	f
side	inc/cub3d.h	/^	int			side;$/;"	m	struct:s_casting	typeref:typename:int
sigint_handler	minilibx-linux/test/run_tests.sh	/^sigint_handler(){$/;"	f
size	libft/libft.h	/^	int				size;$/;"	m	struct:s_chunk	typeref:typename:int
size_line	minilibx-linux/mlx_int.h	/^	int				size_line;$/;"	m	struct:s_img	typeref:typename:int
sl1	minilibx-linux/test/main.c	/^int	sl1;$/;"	v	typeref:typename:int
sl2	minilibx-linux/test/main.c	/^int	sl2;$/;"	v	typeref:typename:int
sl3	minilibx-linux/test/main.c	/^int	sl3;$/;"	v	typeref:typename:int
sl4	minilibx-linux/test/main.c	/^int	sl4;$/;"	v	typeref:typename:int
start_px	inc/cub3d.h	/^	int			start_px;$/;"	m	struct:s_casting	typeref:typename:int
step	inc/cub3d.h	/^	double		step;$/;"	m	struct:s_casting	typeref:typename:double
strlcpy_is_not_posix	minilibx-linux/mlx_xpm.c	/^unsigned int	strlcpy_is_not_posix(char *dest, char *src, unsigned int size)$/;"	f	typeref:typename:unsigned int
t_begin	libft/libft.h	/^}	t_begin;$/;"	t	typeref:struct:s_begin
t_casting	inc/cub3d.h	/^}	t_casting;$/;"	t	typeref:struct:s_casting
t_chunk	libft/libft.h	/^}	t_chunk;$/;"	t	typeref:struct:s_chunk
t_data	inc/cub3d.h	/^}	t_data;$/;"	t	typeref:struct:s_data
t_event_list	minilibx-linux/mlx_int.h	/^}				t_event_list;$/;"	t	typeref:struct:s_event_list
t_global	libft/libft.h	/^}	t_global;$/;"	t	typeref:struct:s_global
t_hooking	inc/cub3d.h	/^}	t_hooking;$/;"	t	typeref:struct:s_hooking
t_img	minilibx-linux/mlx_int.h	/^}				t_img;$/;"	t	typeref:struct:s_img
t_info	inc/cub3d.h	/^}	t_info;$/;"	t	typeref:struct:s_info
t_list	libft/libft.h	/^}	t_list;$/;"	t	typeref:struct:s_list
t_map	inc/cub3d.h	/^}	t_map;$/;"	t	typeref:struct:s_map
t_pile	libft/libft.h	/^}	t_pile;$/;"	t	typeref:struct:s_pile
t_player	inc/cub3d.h	/^}	t_player;$/;"	t	typeref:struct:s_player
t_roll	libft/libft.h	/^}	t_roll;$/;"	t	typeref:struct:s_roll
t_texture	inc/cub3d.h	/^}	t_texture;$/;"	t	typeref:struct:s_texture
t_win_list	minilibx-linux/mlx_int.h	/^}				t_win_list;$/;"	t	typeref:struct:s_win_list
t_xpm_col	minilibx-linux/mlx_int.h	/^}				t_xpm_col;$/;"	t	typeref:struct:s_xpm_col
t_xvar	minilibx-linux/mlx_int.h	/^}				t_xvar;$/;"	t	typeref:struct:s_xvar
test_default_main	minilibx-linux/test/run_tests.sh	/^test_default_main(){$/;"	f
texture	inc/cub3d.h	/^	t_texture	texture;$/;"	m	struct:s_casting	typeref:typename:t_texture
texture_e	inc/cub3d.h	/^	t_texture	texture_e;$/;"	m	struct:s_info	typeref:typename:t_texture
texture_n	inc/cub3d.h	/^	t_texture	texture_n;$/;"	m	struct:s_info	typeref:typename:t_texture
texture_s	inc/cub3d.h	/^	t_texture	texture_s;$/;"	m	struct:s_info	typeref:typename:t_texture
texture_w	inc/cub3d.h	/^	t_texture	texture_w;$/;"	m	struct:s_info	typeref:typename:t_texture
tracing_again	src/cub3d_basic2.c	/^void	tracing_again(t_info *info)$/;"	f	typeref:typename:void
turn_left	src/moove.c	/^void	turn_left(t_info *info)$/;"	f	typeref:typename:void
turn_right	src/moove.c	/^void	turn_right(t_info *info)$/;"	f	typeref:typename:void
type	minilibx-linux/mlx_int.h	/^	int				type;$/;"	m	struct:s_img	typeref:typename:int
use_xshm	minilibx-linux/mlx_int.h	/^	int			use_xshm;$/;"	m	struct:s_xvar	typeref:typename:int
visual	minilibx-linux/mlx_int.h	/^	Visual		*visual;$/;"	m	struct:s_xvar	typeref:typename:Visual *
w	inc/cub3d.h	/^	int			w;$/;"	m	struct:s_info	typeref:typename:int
wall_height	inc/cub3d.h	/^	double		wall_height;$/;"	m	struct:s_casting	typeref:typename:double
wall_ratio	inc/cub3d.h	/^	double		wall_ratio;$/;"	m	struct:s_casting	typeref:typename:double
width	inc/cub3d.h	/^	int		width;$/;"	m	struct:s_texture	typeref:typename:int
width	minilibx-linux/mlx_int.h	/^	int				width;$/;"	m	struct:s_img	typeref:typename:int
win1	minilibx-linux/test/main.c	/^void	*win1;$/;"	v	typeref:typename:void *
win1	minilibx-linux/test/new_win.c	/^void *win1;$/;"	v	typeref:typename:void *
win2	minilibx-linux/test/main.c	/^void    *win2;$/;"	v	typeref:typename:void *
win2	minilibx-linux/test/new_win.c	/^void *win2;$/;"	v	typeref:typename:void *
win3	minilibx-linux/test/main.c	/^void    *win3;$/;"	v	typeref:typename:void *
win_count	minilibx-linux/mlx_loop.c	/^static int	win_count(t_xvar *xvar)$/;"	f	typeref:typename:int	file:
win_list	minilibx-linux/mlx_int.h	/^	t_win_list	*win_list;$/;"	m	struct:s_xvar	typeref:typename:t_win_list *
window	inc/cub3d.h	/^	void		*window;$/;"	m	struct:s_info	typeref:typename:void *
window	minilibx-linux/mlx_int.h	/^	Window				window;$/;"	m	struct:s_win_list	typeref:typename:Window
wm_delete_window	minilibx-linux/mlx_int.h	/^	Atom		wm_delete_window;$/;"	m	struct:s_xvar	typeref:typename:Atom
wm_protocols	minilibx-linux/mlx_int.h	/^	Atom		wm_protocols;$/;"	m	struct:s_xvar	typeref:typename:Atom
x	inc/cub3d.h	/^	double	x;$/;"	m	struct:s_player	typeref:typename:double
xpm1_x	minilibx-linux/test/main.c	/^int	xpm1_x;$/;"	v	typeref:typename:int
xpm1_y	minilibx-linux/test/main.c	/^int	xpm1_y;$/;"	v	typeref:typename:int
y	inc/cub3d.h	/^	double	y;$/;"	m	struct:s_player	typeref:typename:double
